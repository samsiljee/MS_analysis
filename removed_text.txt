`r if (params$input$quant_method == "LFQ") paste("Method used to summarise features:", params$input$summaryMethod)`

`r if (params$input$quant_method == "LFQ" & params$inputsummaryMethod == "linear") paste("Account for heterogeneous variation among intensities from different features:", params$input$equalFeatureVar)`

`r if (params$input$quant_method == "LFQ" & params$input$summaryMethod == "TMP") paste("Impute censored values by Accelated failure model:", params$input$MBimpute)`

`r if (params$input$quant_method == "LFQ" & params$input$summaryMethod == "TMP") paste("Remove runs with >50% missing values:", params$input$remove50missing)`

`r if (params$input$quant_method == "LFQ") paste("Missing values are censored or at random:", params$input$censoredInt)`

`r if (params$input$quant_method == "LFQ") paste("fix missing values:", params$input$fix_missing)`

`r if (params$input$quant_method == "TMT") paste("Protein-level summarisation method:", params$input$TMTProtSumMethod)`

`r if (params$input$quant_method == "TMT" & params$input$TMTProtSumMethod == "msstats") paste("Impute censored values by Accelated failure model:", params$input$MBimpute)`

`r if (params$input$quant_method == "TMT") paste("Global median normalisation (peptide-level):", params$input$global_norm)`

`r if (params$input$quant_method == "TMT") paste("Reference channel normalisation between runs (protein-level):", params$input$reference_norm)`

`r if (params$input$quant_method == "TMT") paste("Remove reference channels:", params$input$remove_norm_channel)`

Maximum quantile for deciding censored missing values: `r params$input$maxQuantileforCensored`
